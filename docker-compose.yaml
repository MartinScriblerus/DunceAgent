# version: '3.9'

services:  
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage
    networks:
      - arch_study_qdrant-network
  warehouse_db:
    container_name: warehouse_db
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - arch_study_postgres-network
    environment:
      POSTGRES_DB: warehouse
      POSTGRES_PASSWORD: warehouse
      POSTGRES_USER: warehouse
    ports:
    - '5432:5432'
  api:
    ports:
      # Exposes application port.
    - "8000:8000"
    build:
      target: dev
      context: ./
      dockerfile: server/Dockerfile 
    volumes:
      # Adds current directory as volume.
      - .:/server/app/src
      # - ./server/app/src:/app/src
      # - ./server/app/src/meltano_project:/app/src/meltano_project
    # environment:
    #   # Enables autoreload.
    #   RECOMMENDER_API_RELOAD: "True"
    depends_on:
      - qdrant
      - warehouse_db
    networks:
      - arch_study_qdrant-network
      - arch_study_postgres-network
    environment:
      # - QDRANT_HOST=qdrant
      # - QDRANT_PORT=6333
      RECOMMENDER_API_RELOAD: "True"
      DATABASE_URL: postgres://warehouse:warehouse@warehouse_db/warehouse
  frontend:
    image: node:18-alpine
    build:
      context: ./next
      args:
        OPENAI_API_KEY: ${OPENAI_API_KEY}
      dockerfile: Dockerfile
      # target: build  # Ensure you target the correct stage if using multi-stage builds
    ports:
      - "3000:3000"
    volumes:
      - ./next:/app
    command: ["npm", "run", "dev"]
    environment:
      - NODE_ENV=development
    depends_on:
      - api
      - warehouse_db
      - qdrant
    networks:
      - arch_study_qdrant-network
      - arch_study_postgres-network
volumes:
  pgdata: {}
networks:
  arch_study_qdrant-network:
  arch_study_postgres-network:

configs:
  qdrant_config:
    content: |
      log_level: INFO  


